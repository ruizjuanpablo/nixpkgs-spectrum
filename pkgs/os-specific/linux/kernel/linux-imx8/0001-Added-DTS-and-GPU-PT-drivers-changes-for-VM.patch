From eae8c5662703330b05fe1765898d692dc80f3971 Mon Sep 17 00:00:00 2001
From: Juan Pablo Ruiz <juanpablo.ruiz@tii.ae>
Date: Sun, 9 Oct 2022 23:18:36 +0400
Subject: [PATCH] Added DTS and GPU-PT drivers changes for VM

- Added host and VM device trees
- Added manual address translation on GPU and DRM drivers
- VFIO-Platform reset_required in false by default
- KVM always use KVM_ARM_TARGET_GENERIC_V8

Signed-off-by: Juan Pablo Ruiz <juanpablo.ruiz@tii.ae>
---
 arch/arm64/boot/dts/freescale/Makefile        |   2 +
 .../boot/dts/freescale/imx8qm-mek-hdmi-vm.dts | 705 ++++++++++++++++++
 .../dts/freescale/imx8qm-mek-kvm-host.dts     | 217 ++++++
 .../dts/freescale/imx8qm-ss-hdmi_mod.dtsi     | 224 ++++++
 arch/arm64/configs/imx_v8_defconfig           |   2 +-
 arch/arm64/kvm/guest.c                        |   4 +
 drivers/gpu/drm/drm_gem_cma_helper.c          |   8 +
 .../gpu-viv/hal/kernel/gc_hal_kernel_mmu.c    |   4 +-
 .../hal/os/linux/kernel/gc_hal_kernel_os.c    |   6 +
 drivers/vfio/platform/vfio_platform.c         |   2 +-
 10 files changed, 1171 insertions(+), 3 deletions(-)
 create mode 100644 arch/arm64/boot/dts/freescale/imx8qm-mek-hdmi-vm.dts
 create mode 100644 arch/arm64/boot/dts/freescale/imx8qm-mek-kvm-host.dts
 create mode 100644 arch/arm64/boot/dts/freescale/imx8qm-ss-hdmi_mod.dtsi

diff --git a/arch/arm64/boot/dts/freescale/Makefile b/arch/arm64/boot/dts/freescale/Makefile
index b7060bfe3af0..a723d870e10e 100644
--- a/arch/arm64/boot/dts/freescale/Makefile
+++ b/arch/arm64/boot/dts/freescale/Makefile
@@ -160,6 +160,8 @@ dtb-$(CONFIG_ARCH_MXC) += imx8mq-evk-pcie-ep.dtb
 dtb-$(CONFIG_ARCH_MXC) += imx8qm-mek.dtb imx8qm-mek-ov5640.dtb \
 			  imx8qm-mek-enet2-tja1100.dtb imx8qm-mek-rpmsg.dtb \
 			  imx8qm-mek-hdmi.dtb \
+			  imx8qm-mek-kvm-host.dtb \
+			  imx8qm-mek-hdmi-vm.dtb \
 			  imx8qm-mek-jdi-wuxga-lvds1-panel.dtb \
 			  imx8qm-mek-jdi-wuxga-lvds1-panel-rpmsg.dtb \
 			  imx8qm-mek-pcie-ep.dtb \
diff --git a/arch/arm64/boot/dts/freescale/imx8qm-mek-hdmi-vm.dts b/arch/arm64/boot/dts/freescale/imx8qm-mek-hdmi-vm.dts
new file mode 100644
index 000000000000..9f25a74f1e37
--- /dev/null
+++ b/arch/arm64/boot/dts/freescale/imx8qm-mek-hdmi-vm.dts
@@ -0,0 +1,705 @@
+#include <dt-bindings/clock/imx8-clock.h>
+#include <dt-bindings/firmware/imx/rsrc.h>
+#include <dt-bindings/gpio/gpio.h>
+#include <dt-bindings/input/input.h>
+#include <dt-bindings/interrupt-controller/arm-gic.h>
+#include <dt-bindings/pinctrl/pads-imx8qm.h>
+#include <dt-bindings/soc/imx8_hsio.h>
+#include <dt-bindings/thermal/thermal.h>
+#include <dt-bindings/usb/pd.h>
+
+/dts-v1/;
+// To work with Linux 5.15 and Qemu with RAM base addresss 0x80000000
+
+/ {
+	model = "Freescale i.MX8QM MEK";             // Mandatory, needed by the imx_scu_soc_init
+	interrupt-parent = <0x8001>;
+	#size-cells = <0x02>;
+	#address-cells = <0x02>;
+	compatible = "linux,dummy-virt";
+
+	aliases {
+		dpu0 = &dpu1;
+	};
+
+	psci {
+		migrate = <0xc4000005>;
+		cpu_on = <0xc4000003>;
+		cpu_off = <0x84000002>;
+		cpu_suspend = <0xc4000001>;
+		method = "hvc";
+		compatible = "arm,psci-0.2\0arm,psci";
+	};
+
+
+	memory@80000000 {
+		reg = <0x00 0x40000000 0x00 0x10000000>,   // 256MB, for passthrough CMA region
+		      <0x00 0x80000000 0x00 0x40000000>;   // 1GB for virtual RAM
+		device_type = "memory";
+	};
+
+	reserved-memory {
+		#address-cells = <2>;
+		#size-cells = <2>;
+		ranges;
+
+		// Reserve the passthrough CMA ram region as CMA for the VM
+		linux,cma {
+			compatible = "shared-dma-pool";
+			reusable;
+			size = <0 0x10000000>;
+			alloc-ranges = <0 0x40000000 0 0x10000000>; // 32MB
+			linux,cma-default;
+		};
+
+	};
+
+	clk_dummy: clock-dummy {
+		compatible = "fixed-clock";
+		#clock-cells = <0>;
+		clock-frequency = <0>;
+		clock-output-names = "clk_dummy";
+	};
+
+	xtal32k: clock-xtal32k {
+		compatible = "fixed-clock";
+		#clock-cells = <0>;
+		clock-frequency = <32768>;
+		clock-output-names = "xtal_32KHz";
+	};
+
+	xtal24m: clock-xtal24m {
+		compatible = "fixed-clock";
+		#clock-cells = <0>;
+		clock-frequency = <24000000>;
+		clock-output-names = "xtal_24MHz";
+	};
+
+	dma_ipg_clk: clock-dma-ipg {
+		compatible = "fixed-clock";
+		#clock-cells = <0>;
+		clock-frequency = <120000000>;
+		clock-output-names = "dma_ipg_clk";
+	};
+
+	scu {
+		compatible = "fsl,imx-scu";
+		
+		mbox-names = "tx0",
+				"rx0",
+				"gip3";
+		mboxes = <&lsio_mu2 0 0
+			&lsio_mu2 1 0
+			&lsio_mu2 3 3>;
+
+		pd: imx8qx-pd {
+			compatible = "fsl,imx8qm-scu-pd", "fsl,scu-pd";
+			#power-domain-cells = <1>;
+			wakeup-irq = <235 236 237 258 262 267 271
+					345 346 347 348>;
+		};
+
+		clk: clock-controller {
+			compatible = "fsl,imx8qm-clk", "fsl,scu-clk";
+			#clock-cells = <2>;
+			clocks = <&xtal32k &xtal24m>;
+			clock-names = "xtal_32KHz", "xtal_24Mhz";
+		};
+
+		iomuxc: pinctrl {
+			compatible = "fsl,imx8qm-iomuxc";
+		};
+	};
+
+
+
+	platform@b000000 {
+		compatible = "qemu,platform\0simple-bus";
+		interrupt-parent = <0x8001>;
+		#address-cells = <0x02>;
+		#size-cells = <0x02>;
+
+		// Devices register re mapping, based from the (qemu) info mtree -f
+		ranges = <0x00 0x56000000 0x00 0x50000000 0x00 0x300000>,
+				 <0x00 0x5d1d0000 0x00 0x50300000 0x00 0x10000>,
+				 <0x00 0x53100000 0x00 0x50340000 0x00 0x40000>;
+		
+		// DMA translation for the CMA region. This tell the drivers
+		// which is the host physical address for the CMA region.
+		dma-ranges = <0x00 0x40000000 0x00 0xd0000000 0x00 0x10000000>;
+	
+		
+		// Mailbox 2 for comunicate with the SCU
+		lsio_mu2: mailbox@5d1d0000 {
+			reg = <0x00 0x5d1d0000 0x00 0x10000>;
+			#mbox-cells = <0x02>;
+			status = "okay";
+			compatible = "fsl,imx8-mu-scu\0fsl,imx8qm-mu\0fsl,imx6sx-mu";
+		};
+
+		// Add the original DC0 and GPU0 subsystems DTSs
+		#include "imx8-ss-dc0.dtsi"
+		#include "imx8-ss-gpu0.dtsi"
+
+		// Add GPU1, because it has the descrption for the imx8_gpu_ss
+		#include "imx8-ss-gpu1.dtsi"
+
+		// Add a modifed HDMI subsystem DTS, because the original is attached to the root.
+		#include "imx8qm-ss-hdmi_mod.dtsi"
+	};
+
+	fw-cfg@9020000 {
+		dma-coherent;
+		reg = <0x00 0x9020000 0x00 0x18>;
+		compatible = "qemu,fw-cfg-mmio";
+	};
+
+	virtio_mmio@a000000 {
+		dma-coherent;
+		interrupts = <0x00 0x10 0x01>;
+		reg = <0x00 0xa000000 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a000200 {
+		dma-coherent;
+		interrupts = <0x00 0x11 0x01>;
+		reg = <0x00 0xa000200 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a000400 {
+		dma-coherent;
+		interrupts = <0x00 0x12 0x01>;
+		reg = <0x00 0xa000400 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a000600 {
+		dma-coherent;
+		interrupts = <0x00 0x13 0x01>;
+		reg = <0x00 0xa000600 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a000800 {
+		dma-coherent;
+		interrupts = <0x00 0x14 0x01>;
+		reg = <0x00 0xa000800 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a000a00 {
+		dma-coherent;
+		interrupts = <0x00 0x15 0x01>;
+		reg = <0x00 0xa000a00 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a000c00 {
+		dma-coherent;
+		interrupts = <0x00 0x16 0x01>;
+		reg = <0x00 0xa000c00 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a000e00 {
+		dma-coherent;
+		interrupts = <0x00 0x17 0x01>;
+		reg = <0x00 0xa000e00 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a001000 {
+		dma-coherent;
+		interrupts = <0x00 0x18 0x01>;
+		reg = <0x00 0xa001000 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a001200 {
+		dma-coherent;
+		interrupts = <0x00 0x19 0x01>;
+		reg = <0x00 0xa001200 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a001400 {
+		dma-coherent;
+		interrupts = <0x00 0x1a 0x01>;
+		reg = <0x00 0xa001400 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a001600 {
+		dma-coherent;
+		interrupts = <0x00 0x1b 0x01>;
+		reg = <0x00 0xa001600 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a001800 {
+		dma-coherent;
+		interrupts = <0x00 0x1c 0x01>;
+		reg = <0x00 0xa001800 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a001a00 {
+		dma-coherent;
+		interrupts = <0x00 0x1d 0x01>;
+		reg = <0x00 0xa001a00 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a001c00 {
+		dma-coherent;
+		interrupts = <0x00 0x1e 0x01>;
+		reg = <0x00 0xa001c00 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a001e00 {
+		dma-coherent;
+		interrupts = <0x00 0x1f 0x01>;
+		reg = <0x00 0xa001e00 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a002000 {
+		dma-coherent;
+		interrupts = <0x00 0x20 0x01>;
+		reg = <0x00 0xa002000 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a002200 {
+		dma-coherent;
+		interrupts = <0x00 0x21 0x01>;
+		reg = <0x00 0xa002200 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a002400 {
+		dma-coherent;
+		interrupts = <0x00 0x22 0x01>;
+		reg = <0x00 0xa002400 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a002600 {
+		dma-coherent;
+		interrupts = <0x00 0x23 0x01>;
+		reg = <0x00 0xa002600 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a002800 {
+		dma-coherent;
+		interrupts = <0x00 0x24 0x01>;
+		reg = <0x00 0xa002800 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a002a00 {
+		dma-coherent;
+		interrupts = <0x00 0x25 0x01>;
+		reg = <0x00 0xa002a00 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a002c00 {
+		dma-coherent;
+		interrupts = <0x00 0x26 0x01>;
+		reg = <0x00 0xa002c00 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a002e00 {
+		dma-coherent;
+		interrupts = <0x00 0x27 0x01>;
+		reg = <0x00 0xa002e00 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a003000 {
+		dma-coherent;
+		interrupts = <0x00 0x28 0x01>;
+		reg = <0x00 0xa003000 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a003200 {
+		dma-coherent;
+		interrupts = <0x00 0x29 0x01>;
+		reg = <0x00 0xa003200 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a003400 {
+		dma-coherent;
+		interrupts = <0x00 0x2a 0x01>;
+		reg = <0x00 0xa003400 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a003600 {
+		dma-coherent;
+		interrupts = <0x00 0x2b 0x01>;
+		reg = <0x00 0xa003600 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a003800 {
+		dma-coherent;
+		interrupts = <0x00 0x2c 0x01>;
+		reg = <0x00 0xa003800 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a003a00 {
+		dma-coherent;
+		interrupts = <0x00 0x2d 0x01>;
+		reg = <0x00 0xa003a00 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a003c00 {
+		dma-coherent;
+		interrupts = <0x00 0x2e 0x01>;
+		reg = <0x00 0xa003c00 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	virtio_mmio@a003e00 {
+		dma-coherent;
+		interrupts = <0x00 0x2f 0x01>;
+		reg = <0x00 0xa003e00 0x00 0x200>;
+		compatible = "virtio,mmio";
+	};
+
+	gpio-keys {
+		#address-cells = <0x01>;
+		#size-cells = <0x00>;
+		compatible = "gpio-keys";
+
+		poweroff {
+			gpios = <0x8003 0x03 0x00>;
+			linux,code = <0x74>;
+			label = "GPIO Key Poweroff";
+		};
+	};
+
+	pl061@9030000 {
+		phandle = <0x8003>;
+		clock-names = "apb_pclk";
+		clocks = <0x8000>;
+		interrupts = <0x00 0x07 0x04>;
+		gpio-controller;
+		#gpio-cells = <0x02>;
+		compatible = "arm,pl061\0arm,primecell";
+		reg = <0x00 0x9030000 0x00 0x1000>;
+	};
+
+	pcie@10000000 {
+		interrupt-map-mask = <0x1800 0x00 0x00 0x07>;
+		interrupt-map = <0x00 0x00 0x00 0x01 0x8001 0x00 0x00 0x00 0x03 0x04 0x00 0x00 0x00 0x02 0x8001 0x00 0x00 0x00 0x04 0x04 0x00 0x00 0x00 0x03 0x8001 0x00 0x00 0x00 0x05 0x04 0x00 0x00 0x00 0x04 0x8001 0x00 0x00 0x00 0x06 0x04 0x800 0x00 0x00 0x01 0x8001 0x00 0x00 0x00 0x04 0x04 0x800 0x00 0x00 0x02 0x8001 0x00 0x00 0x00 0x05 0x04 0x800 0x00 0x00 0x03 0x8001 0x00 0x00 0x00 0x06 0x04 0x800 0x00 0x00 0x04 0x8001 0x00 0x00 0x00 0x03 0x04 0x1000 0x00 0x00 0x01 0x8001 0x00 0x00 0x00 0x05 0x04 0x1000 0x00 0x00 0x02 0x8001 0x00 0x00 0x00 0x06 0x04 0x1000 0x00 0x00 0x03 0x8001 0x00 0x00 0x00 0x03 0x04 0x1000 0x00 0x00 0x04 0x8001 0x00 0x00 0x00 0x04 0x04 0x1800 0x00 0x00 0x01 0x8001 0x00 0x00 0x00 0x06 0x04 0x1800 0x00 0x00 0x02 0x8001 0x00 0x00 0x00 0x03 0x04 0x1800 0x00 0x00 0x03 0x8001 0x00 0x00 0x00 0x04 0x04 0x1800 0x00 0x00 0x04 0x8001 0x00 0x00 0x00 0x05 0x04>;
+		#interrupt-cells = <0x01>;
+		ranges = <0x1000000 0x00 0x00 0x00 0x3eff0000 0x00 0x10000 0x2000000 0x00 0x10000000 0x00 0x10000000 0x00 0x2eff0000 0x3000000 0x80 0x00 0x80 0x00 0x80 0x00>;
+		reg = <0x40 0x50000000 0x00 0x10000000>;
+		msi-parent = <0x8002>;
+		dma-coherent;
+		bus-range = <0x00 0xff>;
+		linux,pci-domain = <0x00>;
+		#size-cells = <0x02>;
+		#address-cells = <0x03>;
+		device_type = "pci";
+		compatible = "pci-host-ecam-generic";
+	};
+
+	pl031@9010000 {
+		clock-names = "apb_pclk";
+		clocks = <0x8000>;
+		interrupts = <0x00 0x02 0x04>;
+		reg = <0x00 0x9010000 0x00 0x1000>;
+		compatible = "arm,pl031\0arm,primecell";
+	};
+
+	pl011@9000000 {
+		clock-names = "uartclk\0apb_pclk";
+		clocks = <0x8000 0x8000>;
+		interrupts = <0x00 0x01 0x04>;
+		reg = <0x00 0x9000000 0x00 0x1000>;
+		compatible = "arm,pl011\0arm,primecell";
+	};
+
+	pmu {
+		interrupts = <0x01 0x07 0x04>;
+		compatible = "arm,armv8-pmuv3";
+	};
+
+	intc@8000000 {
+		phandle = <0x8001>;
+		reg = <0x00 0x8000000 0x00 0x10000 0x00 0x80a0000 0x00 0xf60000>;
+		#redistributor-regions = <0x01>;
+		compatible = "arm,gic-v3";
+		ranges;
+		#size-cells = <0x02>;
+		#address-cells = <0x02>;
+		interrupt-controller;
+		#interrupt-cells = <0x03>;
+
+		its@8080000 {
+			phandle = <0x8002>;
+			reg = <0x00 0x8080000 0x00 0x20000>;
+			msi-controller;
+			compatible = "arm,gic-v3-its";
+		};
+	};
+
+	flash@0 {
+		bank-width = <0x04>;
+		reg = <0x00 0x00 0x00 0x4000000 0x00 0x4000000 0x00 0x4000000>;
+		compatible = "cfi-flash";
+	};
+
+	cpus {
+		#size-cells = <0x00>;
+		#address-cells = <0x01>;
+
+		cpu@0 {
+			reg = <0x00>;
+			compatible = "arm,arm-v8";
+			device_type = "cpu";
+		};
+	};
+
+	timer {
+		interrupts = <0x01 0x0d 0x04 0x01 0x0e 0x04 0x01 0x0b 0x04 0x01 0x0a 0x04>;
+		always-on;
+		compatible = "arm,armv8-timer\0arm,armv7-timer";
+	};
+
+	apb_pclk: apb-pclk {
+		phandle = <0x8000>;
+		clock-output-names = "clk24mhz";
+		clock-frequency = <0x16e3600>;
+		#clock-cells = <0x00>;
+		compatible = "fixed-clock";
+	};
+
+	chosen {
+		bootargs = "rootwait root=/dev/vda console=ttyAMA0";
+		stdout-path = "/pl011@9000000";
+		kaslr-seed = <0x4c89ac66 0x5b35c5ce>;
+	};
+};
+
+// Add the imx8qm subsystem for GPU, with specific configuration for imx8qm
+#include "imx8qm-ss-gpu.dtsi"
+
+
+// IRQs remaping
+&dc0_irqsteer {
+	status="okay";
+	interrupts = <GIC_SPI 0x70 IRQ_TYPE_LEVEL_HIGH>,
+			<GIC_SPI 0x71 IRQ_TYPE_LEVEL_HIGH>,
+			<GIC_SPI 0x72 IRQ_TYPE_LEVEL_HIGH>,
+			<GIC_SPI 0x73 IRQ_TYPE_LEVEL_HIGH>,
+			<GIC_SPI 0x74 IRQ_TYPE_LEVEL_HIGH>,
+			<GIC_SPI 0x75 IRQ_TYPE_LEVEL_HIGH>,
+			<GIC_SPI 0x76 IRQ_TYPE_LEVEL_HIGH>,
+			<GIC_SPI 0x77 IRQ_TYPE_LEVEL_HIGH>;
+	/delete-property/ interrupt-parent;
+};
+
+&irqsteer_hdmi {
+	status="okay";
+	interrupts = <GIC_SPI 0x78 IRQ_TYPE_LEVEL_HIGH>;
+	/delete-property/ interrupt-parent;
+};
+
+&lsio_mu2 {
+	interrupts = <GIC_SPI 0x79 IRQ_TYPE_LEVEL_HIGH>; 
+};
+
+&gpu_3d0 {
+	status="okay";
+	interrupts = <GIC_SPI 0x7A IRQ_TYPE_LEVEL_HIGH>;
+	/delete-property/ interrupt-parent;
+};
+
+
+// DPU conifgurations to use HDMI, similar that the host
+&dpu1 {
+	compatible = "fsl,imx8qm-dpu";
+
+	dpu1_disp0: port@0 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <0>;
+
+		dpu1_disp0_hdmi: endpoint@0 {
+			reg = <0>;
+			remote-endpoint = <&hdmi_disp>;
+		};
+
+	};
+
+	dpu1_disp1: port@1 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <1>;
+
+	};
+};
+
+/ {
+	display-subsystem {
+		compatible = "fsl,imx-display-subsystem";
+		ports = <&dpu1_disp0>, <&dpu1_disp1>;
+	};
+};
+
+// Enablements 
+&dc0_pc {
+	status = "okay";
+};
+
+&dc0_prg1 {
+	status = "okay";
+};
+
+&dc0_prg2 {
+	status = "okay";
+
+};
+
+&dc0_prg3 {
+	status = "okay";
+};
+
+&dc0_prg4 {
+	status = "okay";
+};
+
+&dc0_prg5 {
+	status = "okay";
+};
+
+&dc0_prg6 {
+	status = "okay";
+};
+
+&dc0_prg7 {
+	status = "okay";
+};
+
+&dc0_prg8 {
+	status = "okay";
+};
+
+&dc0_prg9 {
+	status = "okay";
+};
+
+&dc0_dpr1_channel1 {
+	status = "okay";
+};
+
+&dc0_dpr1_channel2 {
+	status = "okay";
+};
+
+&dc0_dpr1_channel3 {
+	status = "okay";
+};
+
+&dc0_dpr2_channel1 {
+	status = "okay";
+};
+
+&dc0_dpr2_channel2 {
+	status = "okay";
+};
+
+&dc0_dpr2_channel3 {
+	status = "okay";
+};
+
+&dpu1 {
+	status = "okay";
+};
+
+
+// Used by hdmi for plug in/out IRQ
+&irqsteer_hdmi {
+	status = "okay";
+};
+
+// 8 clocks used by HDMI
+&hdmi_lpcg_lis_ipg {
+	status = "okay";
+};
+
+&hdmi_lpcg_i2s {
+	status = "okay";
+};
+
+&hdmi_lpcg_msi_hclk {
+	status = "okay";
+};
+
+&hdmi_lpcg_pxl {
+	status = "okay";
+};
+
+&hdmi_lpcg_phy {
+	status = "okay";
+};
+
+&hdmi_lpcg_apb_mux_csr {
+	status = "okay";
+};
+
+&hdmi_lpcg_apb_mux_ctrl {
+	status = "okay";
+};
+
+&hdmi_lpcg_apb {
+	status = "okay";
+};
+
+
+&hdmi {
+	compatible = "cdn,imx8qm-hdmi";
+	lane-mapping = <0x93>;
+	hdcp-config = <0x3>;
+	status = "okay";
+
+	port@0 {
+		reg = <0>;
+		hdmi_disp: endpoint {
+			remote-endpoint = <&dpu1_disp0_hdmi>;
+		};
+	};
+
+};
+
+// Only enable GPU0 and not GPU1
+&gpu_3d0{
+	status = "okay";
+};
+
+&gpu_3d1{
+	status = "disabled";
+};
+
+
+// Configure the used GPU (gpu_3d0), and the memory regions.
+&imx8_gpu_ss {
+	reg = <0x80000000 0x40000000>, <0x40000000 0x10000000>;
+	reg-names = "phys_baseaddr", "contiguous_mem";
+	cores = <&gpu_3d0>;
+	status = "okay";
+};
diff --git a/arch/arm64/boot/dts/freescale/imx8qm-mek-kvm-host.dts b/arch/arm64/boot/dts/freescale/imx8qm-mek-kvm-host.dts
new file mode 100644
index 000000000000..47615caf0d40
--- /dev/null
+++ b/arch/arm64/boot/dts/freescale/imx8qm-mek-kvm-host.dts
@@ -0,0 +1,217 @@
+/dts-v1/;
+
+#include "imx8qm-mek-rpmsg.dts"
+
+// DC0, and HDMI as subsystems, and GPU with passthrough buffers
+
+/ {
+	domu {
+
+		#address-cells = <1>;
+		#size-cells = <0>;
+		doma {
+			compatible = "xen,domu";
+			domain_name = "DomU";
+			reg = <0>;
+
+			// Resources that will initialized ON
+			init_on_rsrcs = <
+				IMX_SC_R_MU_2A
+			>;
+
+			// Resoruces that are reserved for the VMs
+			rsrcs = <
+
+				IMX_SC_R_MU_2A
+
+				IMX_SC_R_HDMI_PLL_0
+				IMX_SC_R_HDMI_PLL_1
+				IMX_SC_R_HDMI
+				IMX_SC_R_HDMI_I2C_0
+				IMX_SC_R_HDMI_I2S
+
+				IMX_SC_R_DC_0
+				IMX_SC_R_DC_0_BLIT0
+				IMX_SC_R_DC_0_BLIT1
+				IMX_SC_R_DC_0_BLIT2
+				IMX_SC_R_DC_0_BLIT_OUT
+				IMX_SC_R_DC_0_WARP
+				IMX_SC_R_DC_0_VIDEO0
+				IMX_SC_R_DC_0_VIDEO1
+				IMX_SC_R_DC_0_FRAC0
+				IMX_SC_R_DC_0_PLL_0
+				IMX_SC_R_DC_0_PLL_1
+
+				IMX_SC_R_GPU_0_PID0
+				IMX_SC_R_GPU_0_PID1
+				IMX_SC_R_GPU_0_PID2
+				IMX_SC_R_GPU_0_PID3
+			>;
+			pads = <
+				/* usbotg1/3 */
+				IMX8QM_USB_SS3_TC0
+				IMX8QM_QSPI1A_SS0_B
+				IMX8QM_USB_SS3_TC3
+				IMX8QM_QSPI1A_DATA0
+
+				IMX8QM_HDMI_TX0_TS_SCL
+				IMX8QM_HDMI_TX0_TS_SDA
+				IMX8QM_COMP_CTL_GPIO_3V3_HDMIGPIO
+
+				IMX8QM_HDMI_TX0_TS_SCL_HDMI_TX0_I2C0_SCL
+				IMX8QM_HDMI_TX0_TS_SCL_DMA_I2C0_SCL
+				IMX8QM_HDMI_TX0_TS_SCL_LSIO_GPIO2_IO02
+				IMX8QM_HDMI_TX0_TS_SDA_HDMI_TX0_I2C0_SDA
+				IMX8QM_HDMI_TX0_TS_SDA_DMA_I2C0_SDA
+				IMX8QM_HDMI_TX0_TS_SDA_LSIO_GPIO2_IO03
+
+				IMX8QM_SCU_GPIO0_07
+				IMX8QM_SPI0_CS1
+				IMX8QM_SPI2_CS1
+				IMX8QM_SAI1_RXFS
+				IMX8QM_SAI1_RXC
+			>;
+
+			gpios = <&lsio_gpio1 13 GPIO_ACTIVE_LOW>,
+				<&lsio_gpio1 19 GPIO_ACTIVE_LOW>,
+				<&lsio_gpio1 27 GPIO_ACTIVE_LOW>,
+				<&lsio_gpio1 28 GPIO_ACTIVE_LOW>,
+				<&lsio_gpio1 30 GPIO_ACTIVE_LOW>,
+				<&lsio_gpio4 1 GPIO_ACTIVE_LOW>,
+				<&lsio_gpio4 3 GPIO_ACTIVE_LOW>,
+				<&lsio_gpio4 6 GPIO_ACTIVE_LOW>,
+				<&lsio_gpio4 9 GPIO_ACTIVE_LOW>,
+				<&lsio_gpio4 11 GPIO_ACTIVE_HIGH>,
+				<&lsio_gpio4 19 GPIO_ACTIVE_HIGH>,
+				<&lsio_gpio4 22 GPIO_ACTIVE_LOW>,
+				<&lsio_gpio4 25 GPIO_ACTIVE_HIGH>,
+				<&lsio_gpio4 26 GPIO_ACTIVE_HIGH>,
+				<&lsio_gpio4 27 GPIO_ACTIVE_LOW>,
+				<&lsio_gpio4 29 GPIO_ACTIVE_LOW>;
+	};
+	};
+};
+
+
+/{
+	reserved-memory {
+
+		// Reserved 256MB of contigous memory for the VM
+		vm_cma: vm_cma@d0000000 {
+			compatible = "removed-dma-pool";
+			reg = <0x0 0xd0000000 0x0 0x10000000>;
+		};
+	};
+};
+
+// Delete IOMMUs for not passedthrough devices
+&usdhc1 {
+	/delete-property/ iommus;
+};
+
+&usdhc2 {
+	/delete-property/ iommus;
+};
+
+&usdhc3 {
+	/delete-property/ iommus;
+};
+
+&fec1 {
+	/delete-property/ iommus;
+};
+
+&fec2 {
+	/delete-property/ iommus;
+};
+
+&sata {
+	/delete-property/ iommus;
+};
+
+&usbotg3 {
+	/delete-property/ iommus;
+};
+
+&usbotg3_cdns3 {
+	/delete-property/ iommus;
+};
+
+/* Delete the Display controller and HDMI subsystems because this will be 
+   integrated in a single device to passthrough */
+/delete-node/ &dc0_subsys;
+/delete-node/ &hdmi_subsys;
+
+// Delete other depended nodes, to avoid DTC errors
+/delete-node/ &{/display-subsystem};
+/delete-node/ &ldb1_ch0;
+/delete-node/ &ldb1_ch1;
+/delete-node/ &mipi0_dsi_in;
+/delete-node/ &lvds_backlight0;
+/delete-node/ &lvds_backlight1;
+
+// Delete not used GPUs on host or VM. 
+// Enable them, causes kernel crash when CONFIG_ANDROID y
+/delete-node/ &gpu_3d1;
+/delete-node/ &imx8_gpu_ss;
+
+/* #################### Passthrough devices *********************/
+
+// Mailbox 2 to communicate with the SCU
+&lsio_mu2 {
+	iommus = <&smmu 0x13 0x7f80>;
+	compatible = "fsl,dummy";
+	status = "okay";
+};
+
+&gpu_3d0 {
+	iommus = <&smmu 0x13 0x7f80>;
+	compatible = "fsl,dummy";
+	status = "okay";
+	/* We have to delete these properties to avoid that u-boot disables
+	   this device */
+	/delete-property/ power-domains;
+	/delete-property/ clocks;
+	/delete-property/ clock-names;
+	/delete-property/ assigned-clocks;
+	/delete-property/ assigned-clock-rates;
+	/delete-property/ pinctrl-0;
+};
+
+/ {
+	// Delete dpu0, to avoid DTC errors
+	aliases {
+		/delete-property/ dpu0;
+	};
+
+	// Display controller and HDMI subsystems
+	dc0_subsys_p: bus@56000000 {
+		iommus = <&smmu 0x13 0x7f80>;
+		compatible = "fsl,dummy";
+		// These registers includes also the HDMI subsystem
+		reg = <0x0 0x56000000 0x0 0x300000>;
+		status = "okay";
+		interrupt-controller;
+		interrupt-parent = <&gic>;
+		#interrupt-cells = <1>;
+		interrupts = <GIC_SPI 40 IRQ_TYPE_LEVEL_HIGH>,
+				<GIC_SPI 41 IRQ_TYPE_LEVEL_HIGH>,
+				<GIC_SPI 42 IRQ_TYPE_LEVEL_HIGH>,
+				<GIC_SPI 43 IRQ_TYPE_LEVEL_HIGH>,
+				<GIC_SPI 44 IRQ_TYPE_LEVEL_HIGH>,
+				<GIC_SPI 45 IRQ_TYPE_LEVEL_HIGH>,
+				<GIC_SPI 46 IRQ_TYPE_LEVEL_HIGH>,
+				<GIC_SPI 47 IRQ_TYPE_LEVEL_HIGH>,
+				<GIC_SPI 61 IRQ_TYPE_LEVEL_HIGH>;
+
+	};
+
+	// Reserved CMA for VM to passthrough
+	vm_cma_p: vm_cma_p@d0000000 {
+		iommus = <&smmu 0x13 0x7f80>;
+		compatible = "fsl,dummy";
+		reg = <0x0 0xd0000000 0x0 0x10000000>;
+		status = "okay";
+	};
+
+};
\ No newline at end of file
diff --git a/arch/arm64/boot/dts/freescale/imx8qm-ss-hdmi_mod.dtsi b/arch/arm64/boot/dts/freescale/imx8qm-ss-hdmi_mod.dtsi
new file mode 100644
index 000000000000..66a9d3af2e69
--- /dev/null
+++ b/arch/arm64/boot/dts/freescale/imx8qm-ss-hdmi_mod.dtsi
@@ -0,0 +1,224 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * Copyright 2019 NXP
+ * Sandor Yu <Sandor.yu@nxp.com>
+ */
+
+#include <dt-bindings/firmware/imx/rsrc.h>
+
+	hdmi_subsys: bus@56260000 {
+		compatible = "simple-bus";
+		#address-cells = <1>;
+		#size-cells = <1>;
+		ranges = <0x56260000 0x0 0x56260000 0x10000>;
+
+		irqsteer_hdmi: irqsteer@56260000 {
+			compatible = "fsl,imx-irqsteer";
+			reg = <0x56260000 0x1000>;
+			interrupt-controller;
+			interrupt-parent = <&gic>;
+			#interrupt-cells = <1>;
+			interrupts = <GIC_SPI 61 IRQ_TYPE_LEVEL_HIGH>;
+			fsl,channel = <0>;
+			fsl,num-irqs = <32>;
+			clocks = <&hdmi_lpcg_lis_ipg 0>;
+			clock-names = "ipg";
+			assigned-clocks = <&clk IMX_SC_R_HDMI_PLL_0 IMX_SC_PM_CLK_PLL>,
+							<&clk IMX_SC_R_HDMI IMX_SC_PM_CLK_MISC4>;
+			assigned-clock-rates = <800000000>, <84375000>;
+			power-domains = <&pd IMX_SC_R_HDMI>;
+			status = "disabled";
+		};
+
+		hdmi_lpcg_i2c0: clock-controller@56263000 {
+			compatible = "fsl,imx8qxp-lpcg";
+			reg = <0x56263000 0x4>;
+			#clock-cells = <1>;
+			clocks = <&clk IMX_SC_R_HDMI_I2C_0 IMX_SC_PM_CLK_MISC2>,
+					<&clk IMX_SC_R_HDMI IMX_SC_PM_CLK_MISC4>;
+			bit-offset = <0 16>;
+			clock-output-names = "hdmi_lpcg_i2c0_clk",
+								"hdmi_lpcg_i2c0_ipg_clk";
+			power-domains = <&pd IMX_SC_R_HDMI_I2C_0>;
+			status = "disabled";
+		};
+
+		hdmi_lpcg_lis_ipg: clock-controller@56263004 {
+			compatible = "fsl,imx8qxp-lpcg";
+			reg = <0x56263004 0x4>;
+			#clock-cells = <1>;
+			clocks = <&clk IMX_SC_R_HDMI IMX_SC_PM_CLK_MISC4>;
+			bit-offset = <16>;
+			clock-output-names = "hdmi_lpcg_lis_ipg_clk";
+			power-domains = <&pd IMX_SC_R_HDMI>;
+			status = "disabled";
+		};
+
+		hdmi_lpcg_pwm_ipg: clock-controller@56263008 {
+			compatible = "fsl,imx8qxp-lpcg";
+			reg = <0x56263008 0x4>;
+			#clock-cells = <1>;
+			clocks = <&clk IMX_SC_R_HDMI IMX_SC_PM_CLK_MISC4>;
+			bit-offset = <16>;
+			clock-output-names = "hdmi_lpcg_pwm_ipg_clk";
+			power-domains = <&pd IMX_SC_R_HDMI>;
+			status = "disabled";
+		};
+
+		hdmi_lpcg_i2s: clock-controller@5626300c {
+			compatible = "fsl,imx8qxp-lpcg";
+			reg = <0x5626300c 0x4>;
+			#clock-cells = <1>;
+			clocks = <&clk IMX_SC_R_HDMI_I2S IMX_SC_PM_CLK_MISC0>;
+			bit-offset = <0>;
+			clock-output-names = "hdmi_lpcg_i2s_clk";
+			power-domains = <&pd IMX_SC_R_HDMI_I2S>;
+			status = "disabled";
+		};
+
+		hdmi_lpcg_gpio_ipg: clock-controller@56263010 {
+			compatible = "fsl,imx8qxp-lpcg";
+			reg = <0x56263010 0x4>;
+			#clock-cells = <1>;
+			clocks = <&clk IMX_SC_R_HDMI IMX_SC_PM_CLK_MISC4>;
+			bit-offset = <16>;
+			clock-output-names = "hdmi_lpcg_gpio_ipg_clk";
+			power-domains = <&pd IMX_SC_R_HDMI>;
+			status = "disabled";
+		};
+
+		hdmi_lpcg_msi_hclk: clock-controller@56263014 {
+			compatible = "fsl,imx8qxp-lpcg";
+			reg = <0x56263014 0x4>;
+			#clock-cells = <1>;
+			clocks = <&clk IMX_SC_R_HDMI IMX_SC_PM_CLK_MISC4>;
+			bit-offset = <0>;
+			clock-output-names = "hdmi_lpcg_msi_hclk_clk";
+			power-domains = <&pd IMX_SC_R_HDMI>;
+			status = "disabled";
+		};
+
+		hdmi_lpcg_pxl: clock-controller@56263018 {
+			compatible = "fsl,imx8qxp-lpcg";
+			reg = <0x56263018 0x4>;
+			#clock-cells = <1>;
+			clocks = <&clk IMX_SC_R_HDMI IMX_SC_PM_CLK_MISC0>;
+			bit-offset = <0>;
+			clock-output-names = "hdmi_lpcg_pxl_clk";
+			power-domains = <&pd IMX_SC_R_HDMI>;
+			status = "disabled";
+		};
+
+		hdmi_lpcg_phy: clock-controller@5626301c {
+			compatible = "fsl,imx8qxp-lpcg";
+			reg = <0x5626301c 0x4>;
+			#clock-cells = <1>;
+			clocks = <&clk IMX_SC_R_HDMI IMX_SC_PM_CLK_MISC0>,
+					<&clk IMX_SC_R_HDMI IMX_SC_PM_CLK_MISC4>;
+			bit-offset = <0 16>;
+			clock-output-names = "hdmi_lpcg_phy_vif_clk",
+							"hdmi_lpcg_phy_pclk";
+			power-domains = <&pd IMX_SC_R_HDMI>;
+			status = "disabled";
+		};
+
+		hdmi_lpcg_apb_mux_csr: clock-controller@56263020 {
+			compatible = "fsl,imx8qxp-lpcg";
+			reg = <0x56263020 0x4>;
+			#clock-cells = <1>;
+			clocks = <&hdmi_lpcg_apb 0>;
+			bit-offset = <16>;
+			clock-output-names = "hdmi_lpcg_apb_mux_csr_clk";
+			power-domains = <&pd IMX_SC_R_HDMI>;
+			status = "disabled";
+		};
+
+		hdmi_lpcg_apb_mux_ctrl: clock-controller@56263024 {
+			compatible = "fsl,imx8qxp-lpcg";
+			reg = <0x56263024 0x4>;
+			#clock-cells = <1>;
+			clocks = <&hdmi_lpcg_apb 0>;
+			bit-offset = <16>;
+			clock-output-names = "hdmi_lpcg_apb_mux_ctrl_clk";
+			power-domains = <&pd IMX_SC_R_HDMI>;
+			status = "disabled";
+		};
+
+		hdmi_lpcg_apb: clock-controller@56263028 {
+			compatible = "fsl,imx8qxp-lpcg";
+			reg = <0x56263028 0x4>;
+			#clock-cells = <1>;
+			clocks = <&clk IMX_SC_R_HDMI IMX_SC_PM_CLK_MISC4>;
+			bit-offset = <16>;
+			clock-output-names = "hdmi_lpcg_apb_clk";
+			power-domains = <&pd IMX_SC_R_HDMI>;
+			status = "disabled";
+		};
+
+		i2c0_hdmi: i2c@56266000 {
+			compatible = "fsl,imx8qm-lpi2c";
+			reg = <0x56266000 0x1000>;
+			interrupts = <8 IRQ_TYPE_LEVEL_HIGH>;
+			interrupt-parent = <&irqsteer_hdmi>;
+			clocks = <&hdmi_lpcg_i2c0 0>,
+					<&hdmi_lpcg_i2c0 1>;
+			clock-names = "per", "ipg";
+			assigned-clocks = <&clk IMX_SC_R_HDMI_I2C_0 IMX_SC_PM_CLK_MISC2>;
+			assigned-clock-rates = <24000000>;
+			power-domains = <&pd IMX_SC_R_HDMI_I2C_0>;
+			status = "disabled";
+		};
+
+		hdmi:hdmi@56268000 {
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <0x56268000 0x1000>,
+					<0x56261000 0x1000>;
+			interrupt-parent = <&irqsteer_hdmi>;
+			interrupts = <10>, <13>;
+			interrupt-names = "plug_in", "plug_out";
+			firmware-name = "hdmitxfw.bin";
+			status = "disabled";
+
+			clocks = <&clk IMX_SC_R_HDMI_PLL_0 IMX_SC_PM_CLK_PLL>,
+					<&clk IMX_SC_R_HDMI_PLL_1 IMX_SC_PM_CLK_PLL>,
+					<&clk IMX_SC_R_HDMI IMX_SC_PM_CLK_MISC4>,
+					<&clk IMX_SC_R_HDMI IMX_SC_PM_CLK_MISC2>,
+					<&clk IMX_SC_R_HDMI IMX_SC_PM_CLK_MISC3>,
+					<&clk IMX_SC_R_HDMI IMX_SC_PM_CLK_MISC0>,
+					<&clk IMX_SC_R_HDMI IMX_SC_PM_CLK_MISC1>,
+					<&hdmi_lpcg_phy 1>,
+					<&hdmi_lpcg_msi_hclk 0>,
+					<&hdmi_lpcg_pxl 0>,
+					<&hdmi_lpcg_phy 0>,
+					<&hdmi_lpcg_lis_ipg 0>,
+					<&hdmi_lpcg_apb 0>,
+					<&hdmi_lpcg_apb_mux_csr 0>,
+					<&hdmi_lpcg_apb_mux_ctrl 0>,
+					<&clk IMX_SC_R_HDMI_I2S IMX_SC_PM_CLK_BYPASS>,
+					<&hdmi_lpcg_i2s 0>;
+			clock-names = "dig_pll", "av_pll", "clk_ipg",
+							"clk_core", "clk_pxl", "clk_pxl_mux",
+							"clk_pxl_link",	"lpcg_hdp", "lpcg_msi",
+							"lpcg_pxl", "lpcg_vif", "lpcg_lis",
+							"lpcg_apb",	"lpcg_apb_csr", "lpcg_apb_ctrl",
+							"clk_i2s_bypass", "lpcg_i2s";
+			assigned-clocks = <&clk IMX_SC_R_HDMI IMX_SC_PM_CLK_MISC3>,
+							<&clk IMX_SC_R_HDMI IMX_SC_PM_CLK_MISC0>,
+							<&clk IMX_SC_R_HDMI IMX_SC_PM_CLK_MISC1>;
+			assigned-clock-parents = <&clk IMX_SC_R_HDMI_PLL_1 IMX_SC_PM_CLK_PLL>,
+								<&clk IMX_SC_R_HDMI_PLL_1 IMX_SC_PM_CLK_PLL>,
+								<&clk IMX_SC_R_HDMI_PLL_1 IMX_SC_PM_CLK_PLL>;
+			power-domains = <&pd IMX_SC_R_HDMI>,
+							<&pd IMX_SC_R_HDMI_PLL_0>,
+							<&pd IMX_SC_R_HDMI_PLL_1>;
+			power-domain-names = "hdmi", "pll0", "pll1";
+
+			port@0 {
+				reg = <0>;
+				hdmi_disp: endpoint {
+					remote-endpoint = <&dpu1_disp0_hdmi>;
+				};
+			};
+	    };
+	};
diff --git a/arch/arm64/configs/imx_v8_defconfig b/arch/arm64/configs/imx_v8_defconfig
index 74dc82cb4dde..2a8bc034cc18 100644
--- a/arch/arm64/configs/imx_v8_defconfig
+++ b/arch/arm64/configs/imx_v8_defconfig
@@ -40,7 +40,7 @@ CONFIG_KEXEC=y
 CONFIG_KEXEC_FILE=y
 CONFIG_CRASH_DUMP=y
 CONFIG_XEN=y
-CONFIG_FORCE_MAX_ZONEORDER=14
+CONFIG_FORCE_MAX_ZONEORDER=11
 CONFIG_COMPAT=y
 CONFIG_RANDOMIZE_BASE=y
 CONFIG_PM_DEBUG=y
diff --git a/arch/arm64/kvm/guest.c b/arch/arm64/kvm/guest.c
index 5ce26bedf23c..45c059c9a912 100644
--- a/arch/arm64/kvm/guest.c
+++ b/arch/arm64/kvm/guest.c
@@ -844,6 +844,10 @@ u32 __attribute_const__ kvm_target_cpu(void)
 	unsigned long implementor = read_cpuid_implementor();
 	unsigned long part_number = read_cpuid_part_number();
 
+	/* WA: Always return a default generic target. Since big.LITTLE arch causes problems to get VM started. */
+	return KVM_ARM_TARGET_GENERIC_V8;
+
+
 	switch (implementor) {
 	case ARM_CPU_IMP_ARM:
 		switch (part_number) {
diff --git a/drivers/gpu/drm/drm_gem_cma_helper.c b/drivers/gpu/drm/drm_gem_cma_helper.c
index 6533efa84020..f2106aeaf371 100644
--- a/drivers/gpu/drm/drm_gem_cma_helper.c
+++ b/drivers/gpu/drm/drm_gem_cma_helper.c
@@ -138,6 +138,14 @@ struct drm_gem_cma_object *drm_gem_cma_create(struct drm_device *drm,
 		goto error;
 	}
 
+    DRM_INFO("\n\nvm cma_obj->paddr: 0x%08X\n", cma_obj->paddr);
+    // If the VM CPU physical address is in the CMA, translate to the host PA for the GPU
+    if(0x40000000 <= cma_obj->paddr && cma_obj->paddr < (0x40000000 + 0x10000000)){
+        cma_obj->paddr = cma_obj->paddr - 0x40000000 + 0xd0000000;
+    }
+
+    DRM_INFO("host cma_obj->paddr: 0x%08X\n\n", cma_obj->paddr);
+
 	return cma_obj;
 
 error:
diff --git a/drivers/mxc/gpu-viv/hal/kernel/gc_hal_kernel_mmu.c b/drivers/mxc/gpu-viv/hal/kernel/gc_hal_kernel_mmu.c
index f4b05a79061c..3640ff4182de 100644
--- a/drivers/mxc/gpu-viv/hal/kernel/gc_hal_kernel_mmu.c
+++ b/drivers/mxc/gpu-viv/hal/kernel/gc_hal_kernel_mmu.c
@@ -641,7 +641,9 @@ static gcePOOL _GetPageTablePool(IN gckOS Os)
     {
         if (data == 1)
         {
-            pool = gcvPOOL_VIRTUAL;
+            /* All memory assigned to the GPU will use to the default CMA and not the guest virtual*/
+            //pool = gcvPOOL_VIRTUAL;
+            pool = gcvPOOL_DEFAULT;
         }
     }
 
diff --git a/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.c b/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.c
index ea0362ee7e76..aab564325e7f 100644
--- a/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.c
+++ b/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_os.c
@@ -7191,6 +7191,12 @@ gckOS_CPUPhysicalToGPUPhysical(
         *GPUPhysical = CPUPhysical;
     }
 
+    // If the VM CPU physical address is in the CMA, translate to the host PA for the GPU
+    if(0x40000000 <= CPUPhysical && CPUPhysical < (0x40000000 + 0x10000000)){
+        *GPUPhysical = CPUPhysical - 0x40000000 + 0xd0000000;
+        printk("*GPUPhysical=%llx <- %llx", *GPUPhysical, CPUPhysical);
+    }
+
     gcmkFOOTER_NO();
     return gcvSTATUS_OK;
 }
diff --git a/drivers/vfio/platform/vfio_platform.c b/drivers/vfio/platform/vfio_platform.c
index 68a1c87066d7..42522bda1727 100644
--- a/drivers/vfio/platform/vfio_platform.c
+++ b/drivers/vfio/platform/vfio_platform.c
@@ -15,7 +15,7 @@
 #define DRIVER_AUTHOR   "Antonios Motakis <a.motakis@virtualopensystems.com>"
 #define DRIVER_DESC     "VFIO for platform devices - User Level meta-driver"
 
-static bool reset_required = true;
+static bool reset_required = false;
 module_param(reset_required, bool, 0444);
 MODULE_PARM_DESC(reset_required, "override reset requirement (default: 1)");
 
-- 
2.25.1

